=pod

=head1 NAME

B<rwaggbag> - Build a binary Aggregate Bag from SiLK Flow records

=head1 SYNOPSIS

  rwaggbag --keys=KEY --counters=COUNTER
        [--note-strip] [--note-add=TEXT] [--note-file-add=FILE]
        [--invocation-strip] [--print-filenames] [--copy-input=PATH]
        [--compression-method=COMP_METHOD]
        [--ipv6-policy={ignore,asv4,mix,force,only}]
        [--output-path=PATH]
        [--site-config-file=FILENAME]
        {[--xargs] | [--xargs=FILENAME] | [FILE [FILE ...]]}

  rwaggbag --help

  rwaggbag --version


=head1 DESCRIPTION

B<rwaggbag> reads SiLK Flow records and builds an Aggregate Bag file.
To build an Aggregate Bag from textual input, use B<rwaggbagbuild(1)>.

An I<Aggregate Bag> is a binary file that maps a key to a counter,
where the key and the counter are both composed of one or more fields.
For example, an Aggregate Bag could contain the sum of the packet
count and the sum of the byte count for each unique source IP and
source port pair.

For each SiLK flow record B<rwaggbag> reads, it extracts the values of
the fields listed in the B<--keys> switch, combines those fields into
a key, searches for an existing bin that has that key and creates a
new bin for that key if none is found, and adds the values for each of
the fields listed in the B<--counters> switch to the bin's counter.
Both the B<--keys> and B<--counters> switches are required.

B<rwaggbag> reads SiLK Flow records from the files named on the
command line or from the standard input when no file names are
specified and B<--xargs> is not present.  To read the standard input
in addition to the named files, use C<-> or C<stdin> as a file name.
If an input file name ends in C<.gz>, the file is uncompressed as it
is read.  When the B<--xargs> switch is provided, B<rwaggbag> reads
the names of the files to process from the named text file or from the
standard input if no file name argument is provided to the switch.
The input to B<--xargs> must contain one file name per line.

If B<rwaggbag> runs out of memory, it will exit immediately.  The
output Aggregate Bag file remains behind with a size of 0 bytes.

To print the contents of an Aggregate Bag as text, use
B<rwaggbagcat(1)>.  The B<rwaggbagbuild(1)> tool can create an
Aggregate Bag from textual input.  B<rwaggbagtool(1)> allows you to
manipulate binary Aggregate Bag files.

=head1 OPTIONS

Option names may be abbreviated if the abbreviation is unique or is an
exact match for an option.  A parameter to an option may be specified
as B<--arg>=I<param> or S<B<--arg> I<param>>, though the first form is
required for options that take optional parameters.

=over 4

=item B<--keys>=I<KEY>

Create a key for binning flow records using the values of the
comma-separated field(s) listed in I<KEY>.  The field names are
case-insensitive, a name may be abbreviated to its shortest unique
prefix, and a name may only be used one time.  The list of available
I<KEY> fields are

=over 4

=item sIPv4

source IP address when IPv4

=item sIPv6

source IP address when IPv6

=item dIPv4

destination IP address when IPv4

=item dIPv6

destination IP address when IPv6

=item sPort

source port for TCP or UDP, or equivalent

=item dPort

destination port for TCP or UDP, or equivalent

=item protocol

IP protocol

=item packets

count of packets recorded for this flow record

=item bytes

count of bytes recorded for this flow record

=item flags

bit-wise OR of TCP flags over all packets in the flow

=item sTime

starting time of the flow, in seconds resolution

=item duration

duration of the flow, in seconds resolution

=item eTime

ending time of the flow, in seconds resolution

=item sensor

numeric ID of the sensor where the flow was collected

=item input

router SNMP input interface or vlanId if packing tools were
configured to capture it (see B<sensor.conf(5)>)

=item output

router SNMP output interface or postVlanId

=item nhIPv4

router next hop IP address when IPv4

=item nhIPv6

router next hop IP address when IPv6

=item initialFlags

TCP flags on first packet in the flow as reported by B<yaf(1)>

=item sessionFlags

bit-wise OR of TCP flags over all packets in the flow except the first
as reported by B<yaf>

=item attributes

flow attributes set by the flow generator

=item application

content of the flow as reported in the applabel field of B<yaf>

=item class

class of the sensor at the collection point

=item type

type of the sensor at the collection point

=item icmpType

ICMP type value for ICMP and ICMPv6 flows, 0 otherwise

=item icmpCode

ICMP code value for ICMP and ICMPv6 flows, 0 otherwise

=item scc

the country code of the source IP address.  Uses the mapping file
specified by the SILK_COUNTRY_CODES environment variable or the
F<country_codes.pmap> mapping file, as described in L</FILES>.  (See
also B<ccfilter(3)>.)  I<Since SiLK 3.19.0.>

=item dcc

the country code of the destination IP address.  See C<scc>.
I<Since SiLK 3.19.0.>

=back

=item B<--counters>=I<COUNTER>

Add to the bin determined by the fields in B<--key> the values of the
comma-separated field(s) listed in I<COUNTER>.  The field names are
case-insensitive, a name may be abbreviated to its shortest unique
prefix, and a name may only be used one time.  The list of available
I<COUNTER> fields are

=over 4

=item records

count of the number of flow records that match the key

=item sum-packets

the sum of the packet counts for flow records that match the key

=item sum-bytes

the sum of the byte counts for flow records that match the key

=item sum-duration

the sum of the durations (in seconds) for flow records that match the
key

=back

=item B<--note-strip>

Do not copy the notes (annotations) from the input file(s) to the
output file.  When this switch is not specified, notes from the input
file(s) are copied to the output.

=item B<--note-add>=I<TEXT>

Add the specified I<TEXT> to the header of the output file as an
annotation.  This switch may be repeated to add multiple annotations
to a file.  To view the annotations, use the B<rwfileinfo(1)> tool.

=item B<--note-file-add>=I<FILENAME>

Open I<FILENAME> and add the contents of that file to the header of
the output file as an annotation.  This switch may be repeated to
add multiple annotations.  Currently the application makes no effort
to ensure that I<FILENAME> contains text; be careful that you do not
attempt to add a SiLK data file as an annotation.

=item B<--invocation-strip>

Do not record any command line history: do not copy the invocation
history from the input files to the output file(s), and do not record
the current command line invocation in the output.  The invocation may
be viewed with B<rwfileinfo(1)>.

=item B<--print-filenames>

Print to the standard error the names of input files as they are
opened.

=item B<--copy-input>=I<PATH>

Copy all binary SiLK Flow records read as input to the specified file
or named pipe.  I<PATH> may be C<stdout> or C<-> to write flows to the
standard output as long as the B<--output-path> switch is specified to
redirect B<rwaggbag>'s output to a different location.

=item B<--output-path>=I<PATH>

Write the binary Aggregate Bag output to I<PATH>, where I<PATH> is a
filename, a named pipe, the keyword C<stderr> to write the output to
the standard error, or the keyword C<stdout> or C<-> to write the
output to the standard output.  If I<PATH> names an existing file,
B<rwaggbag> exits with an error unless the SILK_CLOBBER environment
variable is set, in which case I<PATH> is overwritten.  If this switch
is not given, the output is written to the standard output.
Attempting to write the binary output to a terminal causes B<rwaggbag>
to exit with an error.

=item B<--ipv6-policy>=I<POLICY>

Determine how IPv4 and IPv6 flows are handled when SiLK has been
compiled with IPv6 support.  When the switch is not provided, the
SILK_IPV6_POLICY environment variable is checked for a policy.  If it
is also unset or contains an invalid policy, the I<POLICY> is
B<mix>.  When SiLK has not been compiled with IPv6 support, IPv6
flows are always ignored, regardless of the value passed to this
switch or in the SILK_IPV6_POLICY variable.  The supported values for
I<POLICY> are:

=over

=item ignore

Ignore any flow record marked as IPv6, regardless of the IP addresses
it contains.  Only IP addresses contained in IPv4 flow records will be
added to the Aggregate Bag.

=item asv4

Convert IPv6 flow records that contain addresses in the ::ffff:0:0/96
netblock (that is, IPv4-mapped IPv6 addresses) to IPv4 and ignore all
other IPv6 flow records.

=item mix

Process the input as a mixture of IPv4 and IPv6 flow records.  When
creating a bag whose key is an IP address and the input contains IPv6
addresses outside of the ::ffff:0:0/96 netblock, this policy is
equivalent to B<force>; otherwise it is equivalent to B<asv4>.

=item force

Convert IPv4 flow records to IPv6, mapping the IPv4 addresses into the
::ffff:0:0/96 netblock.

=item only

Process only flow records that are marked as IPv6.  Only IP addresses
contained in IPv6 flow records will be added to the Aggregate Bag.

=back

=item B<--compression-method>=I<COMP_METHOD>

Specify the compression library to use when writing output files.  If
this switch is not given, the value in the SILK_COMPRESSION_METHOD
environment variable is used if the value names an available
compression method.  When no compression method is specified,
output to the standard output or to named pipes is not compressed, and
output to files is compressed using the default chosen when SiLK was
compiled.  The valid values for I<COMP_METHOD> are determined by which
external libraries were found when SiLK was compiled.  To see the
available compression methods and the default method, use the
B<--help> or B<--version> switch.  SiLK can support the following
I<COMP_METHOD> values when the required libraries are available.

=over 4

=item none

Do not compress the output using an external library.

=item zlib

Use the B<zlib(3)> library for compressing the output, and always
compress the output regardless of the destination.  Using zlib
produces the smallest output files at the cost of speed.

=item lzo1x

Use the I<lzo1x> algorithm from the LZO real time compression library
for compression, and always compress the output regardless of the
destination.  This compression provides good compression with less
memory and CPU overhead.

=item snappy

Use the I<snappy> library for compression, and always compress the
output regardless of the destination.  This compression provides good
compression with less memory and CPU overhead.  I<Since SiLK 3.13.0.>

=item best

Use lzo1x if available, otherwise use snappy if available, otherwise
use zlib if available.  Only compress the output when writing to a
file.

=back

=item B<--site-config-file>=I<FILENAME>

Read the SiLK site configuration from the named file I<FILENAME>.
When this switch is not provided, B<rwaggbag> searches for the site
configuration file in the locations specified in the L</FILES>
section.

=item B<--xargs>

=item B<--xargs>=I<FILENAME>

Read the names of the input files from I<FILENAME> or from the
standard input if I<FILENAME> is not provided.  The input is expected
to have one filename per line.  B<rwaggbag> opens each named file in
turn and reads records from it as if the filenames had been listed on
the command line.

=item B<--help>

Print the available options and exit.

=item B<--version>

Print the version number and information about how SiLK was
configured, then exit the application.

=back

=head1 EXAMPLES

In the following examples, the dollar sign (C<$>) represents the shell
prompt.  The text after the dollar sign represents the command line.
Lines have been wrapped for improved readability, and the back slash
(C<\>) is used to indicate a wrapped line.

To create an Aggregate Bag that sums the packet count for destination
IPs addresses in the SiLK Flow file F<data.rw>:

 $ rwaggbag --key=dipv6 --counter=sum-packets data.rw   \
   | rwaggbagcat

To sum the number of records, packet count, and byte count for all
flow records

 $ rwaggbag --key=dport --counter=records,sum-packets,sum-bytes    \
        --output-path=dport.aggbag data.rw

To count the number of records seen for each unique source port,
destination port, and protocol:

 $ rwaggbag --key=sport,dport,proto --counter=records data.rw   \
   | rwaggbagcat

=head1 ENVIRONMENT

=over 4

=item SILK_COUNTRY_CODES

This environment variable allows the user to specify the country code
mapping file that B<rwaggbag> uses when mapping an IP to a country for
the C<scc> and C<dcc> keys.  The value may be a complete path or a
file relative to the SILK_PATH.  See the L</FILES> section for
standard locations of this file.

=item SILK_IPV6_POLICY

This environment variable is used as the value for B<--ipv6-policy>
when that switch is not provided.

=item SILK_CLOBBER

The SiLK tools normally refuse to overwrite existing files.  Setting
SILK_CLOBBER to a non-empty value removes this restriction.

=item SILK_COMPRESSION_METHOD

This environment variable is used as the value for
B<--compression-method> when that switch is not provided.

=item SILK_CONFIG_FILE

This environment variable is used as the value for the
B<--site-config-file> when that switch is not provided.

=item SILK_DATA_ROOTDIR

This environment variable specifies the root directory of data
repository.  As described in the L</FILES> section, B<rwaggbag> may
use this environment variable when searching for the SiLK site
configuration file.

=item SILK_PATH

This environment variable gives the root of the install tree.  When
searching for configuration files, B<rwaggbag> may use this environment
variable.  See the L</FILES> section for details.

=back

=head1 FILES

=over 4

=item F<${SILK_CONFIG_FILE}>

=item F<${SILK_DATA_ROOTDIR}/silk.conf>

=item F<@SILK_DATA_ROOTDIR@/silk.conf>

=item F<${SILK_PATH}/share/silk/silk.conf>

=item F<${SILK_PATH}/share/silk.conf>

=item F<@prefix@/share/silk/silk.conf>

=item F<@prefix@/share/silk.conf>

Possible locations for the SiLK site configuration file which are
checked when the B<--site-config-file> switch is not provided.

=item F<$SILK_COUNTRY_CODES>

=item F<$SILK_PATH/share/silk/country_codes.pmap>

=item F<$SILK_PATH/share/country_codes.pmap>

=item F<@prefix@/share/silk/country_codes.pmap>

=item F<@prefix@/share/country_codes.pmap>

Possible locations for the country code mapping file required by the
C<scc> and C<dcc> keys.

=back

=head1 NOTES

B<rwaggbag> and the other Aggregate Bag tools were introduced in SiLK
3.15.0.

=head1 SEE ALSO

B<rwaggbagbuild(1)>, B<rwaggbagcat(1)>, B<rwaggbagtool(1)>,
B<rwbag(1)>, B<rwfileinfo(1)>, B<rwfilter(1)>, B<rwnetmask(1)>,
B<rwset(1)>, B<rwuniq(1)>, B<ccfilter(3)>, B<sensor.conf(5)>,
B<silk(7)>, B<yaf(1)>, B<zlib(3)>

=cut

$SiLK: rwaggbag.pod c56bd724bfc8 2019-10-11 19:38:12Z mthomas $

Local Variables:
mode:text
indent-tabs-mode:nil
End:
