=pod

=head1 NAME

B<rwaggbagtool> - Manipulate binary Aggregate Bag files

=head1 SYNOPSIS

  rwaggbagtool [{ --add | --subtract }]
        [--insert-field=FIELD=VALUE [--insert-field=FIELD2=VALUE2...]]
        [{ --remove-fields=REMOVE_LIST | --select-fields=SELECT_LIST
           | --to-ipset=FIELD [--ipset-record-version=VERSION]
           | --to-bag=BAG_KEY,BAG_COUNTER }]
        [--min-field=FIELD=VALUE [--min-field=FIELD=VALUE...]]
        [--max-field=FIELD=VALUE [--max-field=FIELD=VALUE...]]
        [--set-intersect=FIELD=FILE [--set-intersect=FIELD=FILE...]]
        [--set-complement=FIELD=FILE [--set-complement=FIELD=FILE...]]
        [--output-path=PATH]
        [--note-strip] [--note-add=TEXT] [--note-file-add=FILE]
        [--compression-method=COMP_METHOD]
        [--site-config-file=FILENAME]
        [AGGBAG_FILE [AGGBAG_FILE ...]]

  rwaggbagtool --help

  rwaggbagtool --version

=head1 DESCRIPTION

B<rwaggbagtool> performs operations on one or more Aggregate Bag files
and creates a new Aggregate Bag file.  An I<Aggregate Bag> is a binary
file that maps a key to a counter, where the key and the counter are
both composed of one or more fields.  B<rwaggbag(1)> and
B<rwaggbagbuild(1)> are the primary tools used to create an Aggregate
Bag file.  B<rwaggbagcat(1)> prints a binary Aggregate Bag file as
text.

B<rwaggbagtool> processes the Aggregate Bag files listed on the
command line.  When no file names are specified, B<rwaggbagtool>
attempts to read an Aggregate Bag from the standard input.  To read
the standard input in addition to the named files, use C<-> or
C<stdin> as a file name.  If any input is not an Aggregate Bag file,
B<rwaggbagtool> prints an error to the standard error and exits with
an error status.

=head1 OPTIONS

Option names may be abbreviated if the abbreviation is unique or is an
exact match for an option.  A parameter to an option may be specified
as B<--arg>=I<param> or S<B<--arg> I<param>>, though the first form is
required for options that take optional parameters.

=over 4

=item B<--add>

Sum each of the counters for each key for all the Aggregate Bag input
files.  All the Aggregate Bag files must have the same set of key
fields and counter fields.  (The values of the keys may differ, but
the set of fields that comprise the key must match.)  If no other
operation is specified, the add operation is the default.

=item B<--subtract>

Subtract from the first Aggregate Bag file all subsequent Aggregate
Bag files.  All the Aggregate Bag files must have the same set of key
fields and counter fields.  If a key does not appear in the first
Aggregate Bag file, B<rwaggbagtool> assumes it has a value of 0.  If
any counter subtraction results in a negative number, the key will not
appear in the resulting Aggregate Bag file.

=back

=head2 Field manipulation switches

The following switches allow modification of the fields in the
Aggregate Bag file.  The B<--remove-fields> and B<--select-fields>
switches are mutually exclusive, and they reduce the number of fields
in the Aggregate Bag input files.  The B<--insert-field> switch is
applied after B<--remove-fields> or B<--select-fields>, and it adds a
field unless that field is already present.

=over 4

=item B<--insert-field>=I<FIELD>B<=>I<VALUE>

For each entry read from an Aggregate Bag input file, insert a field
named I<FIELD> and set its value to I<VALUE> if one of the following
is true: (1)the input file does not contain a field named I<FIELD> or
(2)the input file does have a field named I<FIELD> but it was removed
by either (2a)being listed in the B<--remove-fields> list or (2b)not
being listed in the B<--select-fields> list.  That is, this switch
only inserts I<FIELD> when I<FIELD> is not present in the input
Aggregate Bag, but specifying I<FIELD> in B<--remove-fields> removes
it from the input.  I<VALUE> is a textual representation of the
field's value as described in the description of the B<--fields>
switch in the B<rwaggbagbuild(1)> tool.  This switch may be repeated
in order to insert multiple fields.

=item B<--remove-fields>=I<REMOVE_LIST>

Remove the fields specified in I<REMOVE_LIST> from each of the
Aggregate Bag input files, where I<REMOVE_LIST> is a comma-separated
list of field names.  This switch may include field names that are not
in an Aggregate Bag input, and those field names are ignored.  If a
field name is included in this list and in a B<--insert-field> switch,
the field is given the value specified by the B<--insert-field>
switch, and the field is included in the output Aggregate Bag file.
If removing a key field produces multiple copies of a key, the
counters of those keys are merged.  B<rwaggbagbuild> exits with an
error when this switch is used with B<--select-fields>, B<--to-ipset>,
or B<--to-bag>.

=item B<--select-fields>=I<SELECT_LIST>

For each Aggregate Bag input file, only use the fields in
I<SELECT_LIST>, a comma-separated list of field names.  Alternatively,
consider this switch as removing all fields that are not included in
I<SELECT_LIST>.  This switch may include field names that are not in an
Aggregate Bag input, and those field names are ignored.  When a field
name is included in this list and in a B<--insert-field> switch, the
field uses its value from the input Aggregate Bag file if present, and
it uses the value specified in the B<--insert-field> switch otherwise.
If selecting only some key fields produces multiple copies of a key,
the counters of those keys are merged.  B<rwaggbagbuild> exits with an
error when this switch is used with B<--remove-fields>, B<--to-ipset>,
or B<--to-bag>.

=back

=head2 Filtering switches

The following switches remove entries from the Aggregate Bag file
based on a field's value.  These switches are applied immediately
before the output is generated.

=over 4

=item B<--min-field>=I<FIELD>B<=>I<VALUE>

Remove from the Aggregate Bag file all entries where the value of the
field I<FIELD> is less than I<VALUE>, where I<VALUE> is a textual
representation of the field's value as described in the description of
the B<--fields> switch in the B<rwaggbagbuild(1)> tool.  This switch
is ignored if I<FIELD> is not present in the Aggregate Bag.  This
switch may be repeated.  I<Since SiLK 3.17.0.>

=item B<--max-field>=I<FIELD>B<=>I<VALUE>

Remove from the Aggregate Bag file all entries where the value of the
field I<FIELD> is greater than I<VALUE>, where I<VALUE> is a textual
representation of the field's value as described in the description of
the B<--fields> switch in the B<rwaggbagbuild(1)> tool.  This switch
is ignored if I<FIELD> is not present in the Aggregate Bag.  This
switch may be repeated.  I<Since SiLK 3.17.0.>

=item B<--set-intersect>=I<FIELD>B<=>I<SET_FILE>

Read an IPset from the stream I<SET_FILE>, and remove from the
Aggregate Bag file all entries where the value of the field I<FIELD>
is B<not> present in the IPset.  I<SET_FILE> may be the name a file or
the string C<-> or C<stdin> to read the IPset from the standard input.
This switch is ignored if I<FIELD> is not present in the Aggregate
Bag.  This switch may be repeated.  I<Since SiLK 3.17.0.>

=item B<--set-complement>=I<FIELD>B<=>I<SET_FILE>

Read an IPset from the stream I<SET_FILE>, and remove from the
Aggregate Bag file all entries where the value of the field I<FIELD>
is present in the IPset.  I<SET_FILE> may be the name a file or the
string C<-> or C<stdin> to read the IPset from the standard input.
This switch is ignored if I<FIELD> is not present in the Aggregate
Bag.  This switch may be repeated.  I<Since SiLK 3.17.0.>

=back

=head2 Output switches

The following switches control the output.

=over 4

=item B<--to-ipset>=I<FIELD>

After operating on the Aggregate Bag input files, create an IPset file
from the resulting Aggregate Bag by treating the values in the field
named I<FIELD> as IP addresses, inserting the IP addresses into the
IPset, and writing the IPset to the standard output or the destination
specified by B<--output-path>.  When this switch is used, the only
legal field name that may be used in the B<--insert-field> switch is
I<FIELD>.  B<rwaggbagbuild> exits with an error when this switch is
used with B<--remove-fields>, B<--select-fields>, or B<--to-bag>.

=item B<--ipset-record-version>=I<VERSION>

Specify the format of the IPset records that are written to the output
when the B<--to-ipset> switch is used.  I<VERSION> may be 2, 3, 4, 5
or the special value 0.  When the switch is not provided, the
SILK_IPSET_RECORD_VERSION environment variable is checked for a
version.  The default version is 0.

=over 4

=item S< 0 >

Use the default version for an IPv4 IPset and an IPv6 IPset.  Use the
B<--help> switch to see the versions used for your SiLK installation.

=item S< 2 >

Create a file that may hold only IPv4 addresses and is readable by all
versions of SiLK.

=item S< 3 >

Create a file that may hold IPv4 or IPv6 addresses and is readable by
S<SiLK 3.0> and later.

=item S< 4 >

Create a file that may hold IPv4 or IPv6 addresses and is readable by
S<SiLK 3.7> and later.  These files are more compact that version 3
and often more compact than version 2.

=item S< 5 >

Create a file that may hold only IPv6 addresses and is readable by
S<SiLK 3.14> and later.  When this version is specified, IPsets
containing only IPv4 addresses are written in version 4.  These files
are usually more compact that version 4.

=back

=item B<--to-bag>=I<BAG_KEY>,I<BAG_COUNTER>

After operating on the Aggregate Bag input files, create a (normal)
Bag file from the resulting Aggregate Bag.  Use the I<BAG_KEY> field
as the key of the Bag, and the I<BAG_COUNTER> field as the counter of
the Bag.  Write the Bag to the standard output or the destination
specified by B<--output-path>.  When this switch is used, the only
legal field names that may be used in the B<--insert-field> switch are
I<BAG_KEY> and I<BAG_COUNTER>.  B<rwaggbagbuild> exits with an error
when this switch is used with B<--remove-fields>, B<--select-fields>,
or B<--to-ipset>.

=item B<--output-path>=I<PATH>

Write the resulting Aggregate Bag, IPset (see B<--to-ipset>), or Bag
(see B<--to-bag>) to I<PATH>, where I<PATH> is a filename, a named
pipe, the keyword C<stderr> to write the output to the standard error,
or the keyword C<stdout> or C<-> to write the output to the standard
output.  If I<PATH> names an existing file, B<rwaggbagtool> exits with
an error unless the SILK_CLOBBER environment variable is set, in which
case I<PATH> is overwritten.  If this switch is not given, the output
is written to the standard output.  Attempting to write the binary
output to a terminal causes B<rwaggbagtool> to exit with an error.

=item B<--note-strip>

Do not copy the notes (annotations) from the input files to the output
file.  Normally notes from the input files are copied to the output.

=item B<--note-add>=I<TEXT>

Add the specified I<TEXT> to the header of the output file as an
annotation.  This switch may be repeated to add multiple annotations
to a file.  To view the annotations, use the B<rwfileinfo(1)> tool.

=item B<--note-file-add>=I<FILENAME>

Open I<FILENAME> and add the contents of that file to the header of
the output file as an annotation.    This switch may be repeated to
add multiple annotations.  Currently the application makes no effort
to ensure that I<FILENAME> contains text; be careful that you do not
attempt to add a SiLK data file as an annotation.

=item B<--compression-method>=I<COMP_METHOD>

Specify the compression library to use when writing output files.  If
this switch is not given, the value in the SILK_COMPRESSION_METHOD
environment variable is used if the value names an available
compression method.  When no compression method is specified,
output to the standard output or to named pipes is not compressed, and
output to files is compressed using the default chosen when SiLK was
compiled.  The valid values for I<COMP_METHOD> are determined by which
external libraries were found when SiLK was compiled.  To see the
available compression methods and the default method, use the
B<--help> or B<--version> switch.  SiLK can support the following
I<COMP_METHOD> values when the required libraries are available.

=over 4

=item none

Do not compress the output using an external library.

=item zlib

Use the B<zlib(3)> library for compressing the output, and always
compress the output regardless of the destination.  Using zlib
produces the smallest output files at the cost of speed.

=item lzo1x

Use the I<lzo1x> algorithm from the LZO real time compression library
for compression, and always compress the output regardless of the
destination.  This compression provides good compression with less
memory and CPU overhead.

=item snappy

Use the I<snappy> library for compression, and always compress the
output regardless of the destination.  This compression provides good
compression with less memory and CPU overhead.

=item best

Use lzo1x if available, otherwise use snappy if available, otherwise
use zlib if available.  Only compress the output when writing to a
file.

=back

=back

=head2 Miscellaneous switches

=over 4

=item B<--site-config-file>=I<FILENAME>

Read the SiLK site configuration from the named file I<FILENAME>.
When this switch is not provided, B<rwaggbagtool> searches for the
site configuration file in the locations specified in the L</FILES>
section.

=item B<--help>

Print the available options and exit.

=item B<--version>

Print the version number and information about how SiLK was
configured, then exit the application.

=back

=head1 EXAMPLES

In the following examples, the dollar sign (C<$>) represents the shell
prompt.  The text after the dollar sign represents the command line.
Lines have been wrapped for improved readability, and the back slash
(C<\>) is used to indicate a wrapped line.

To create two Aggregate Bag files, F<in.aggbag> and F<inweb.aggbag>,
and then add the counters to create F<total.aggbag>:

 $ rwfilter --type=in --pass=-                              \
   | rwaggbag --key=sport,dport,proto --counter=records     \
        --output-path=in.aggbag
 $ rwfilter --type=inweb --pass=-                           \
   | rwaggbag --key=sport,dport,proto --counter=records     \
        --output-path=inweb.aggbag
 $ rwaggbagtool --add in.aggbag inweb.aggbag --output-path=total.aggbag
 $ rwaggbagcat total.aggbag

To subtract F<inweb.aggbag> from F<total.aggbag>:

 $ rwaggbagtool --subtract total.aggbag inweb.aggbag    \
   | rwaggbagcat

Create an Aggregate Bag file:

 $ rwaggbag --key=sport,dport                       \
        --counter=sum-bytes,sum-packets data.rw     \
        --output-path=my-ab.aggbag

To get just the source port and byte count from the file
F<my-ab.aggbag>, you may either remove the destination port and packet
count:

 $ rwaggbagtool --remove=dport,sum-packets my-ab.aggbag  \
        --output-path=source-bytes.aggbag

or you may select the source port and byte count:

 $ rwaggbagtool --select=sport,sum-bytes my-ag.aggbag    \
        --output-path=source-bytes.aggbag

To replace the packet count in F<my-ab.aggbag> with zeros, remove the
field and insert it with the value you want:

 $ rwaggbagtool --remove=sum-packets --insert=sum-packets=0  \
        my-ab.aggbag --output-path=zero-packets.aggbag

To create a regular Bag with the source port and byte count from
F<my-ab.aggbag>, use the B<--to-bag> switch:

 $ rwaggbagtool --to-bag=sport,sum-bytes my-ab.aggbag  \
        --output-path=sport-byte.bag

The B<--to-ipset> switch works similarly:

 $ rwaggbag --key=sipv6,dipv6 --counter=records data-v6.rw  \
        --output-path=ips.aggbag
 $ rwaggbagtool --to-ipset=dipv6 --output-path=dip.set


=head1 ENVIRONMENT

=over 4

=item SILK_IPSET_RECORD_VERSION

This environment variable is used as the value for the
B<--ipset-record-version> when that switch is not provided.

=item SILK_CLOBBER

The SiLK tools normally refuse to overwrite existing files.  Setting
SILK_CLOBBER to a non-empty value removes this restriction.

=item SILK_COMPRESSION_METHOD

This environment variable is used as the value for
B<--compression-method> when that switch is not provided.

=item SILK_CONFIG_FILE

This environment variable is used as the value for the
B<--site-config-file> when that switch is not provided.

=item SILK_DATA_ROOTDIR

This environment variable specifies the root directory of data
repository.  As described in the L</FILES> section, B<rwaggbagtool>
may use this environment variable when searching for the SiLK site
configuration file.

=item SILK_PATH

This environment variable gives the root of the install tree.  When
searching for configuration files, B<rwaggbagtool> may use this
environment variable.  See the L</FILES> section for details.

=back

=head1 FILES

=over 4

=item F<${SILK_CONFIG_FILE}>

=item F<${SILK_DATA_ROOTDIR}/silk.conf>

=item F<@SILK_DATA_ROOTDIR@/silk.conf>

=item F<${SILK_PATH}/share/silk/silk.conf>

=item F<${SILK_PATH}/share/silk.conf>

=item F<@prefix@/share/silk/silk.conf>

=item F<@prefix@/share/silk.conf>

Possible locations for the SiLK site configuration file which are
checked when the B<--site-config-file> switch is not provided.

=back

=head1 SEE ALSO

B<rwaggbag(1)>, B<rwaggbagbuild(1)>, B<rwaggbagcat(1)>,
B<rwfilter(1)>, B<rwfileinfo(1)>, B<silk(7)>, B<zlib(3)>

=cut

$SiLK: rwaggbagtool.pod c56bd724bfc8 2019-10-11 19:38:12Z mthomas $

Local Variables:
mode:text
indent-tabs-mode:nil
End:
