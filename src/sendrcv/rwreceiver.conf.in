### RWReceiver configuration file  -*- sh -*-
##
## The canonical pathname for this file is
## @sysconfdir@/@myprog@.conf
##
## RCSIDENT("$SiLK: rwreceiver.conf.in 8845fdf19700 2018-11-13 22:39:40Z mthomas $")
##
## This is a /bin/sh file that gets loaded by the init.d/@myprog@
## wrapper script, and this file must follow /bin/sh syntax rules.

# Set to non-empty value to enable rwreceiver
ENABLED=

# These are convenience variables for setting other values in this
# configuration file; their use is not required.
statedirectory=@localstatedir@/lib/rwreceiver

# If CREATE_DIRECTORIES is set to "yes", the directories named in this
# file will be created automatically if they do not already exist
CREATE_DIRECTORIES=no

# Full path of the directory containing the "@myprog@" program
BIN_DIR=@sbindir@

# The full path of the directory where received files will be placed
DESTINATION_DIR=${statedirectory}/destination

# The mode in which the receiver will run.  Valid values are "server"
# and "client".
MODE=client

# The name of this receiver instance
IDENTIFIER=receiver-1

# The PORT or HOST:PORT pair upon which the server listens for
# incoming connections.  This is only required when running in server
# mode.  If HOST is not provided, the server listens on any address.
# HOST may be a name or an IP address. If HOST is an IPv6 address,
# enclose it in square brackets, and enclose the entire value in
# single quotes to prevent interpretation by the shell.
#PORT=10000
#PORT='machine.test.org:9999'
#PORT='192.168.100.10:9998'
#PORT='[2001:db8:c0:a8::64:a]:9997'
PORT=

# Command to run on each file once it has been received.  In the
# command, "%s" will be replaced with the full path to the received
# file, and "%I" will be replaced with the identifier of the rwsender
# that sent the file.
#POST_COMMAND='echo received file %s from rwsender %I'
POST_COMMAND=

# The amount of space (in bytes) rwreceiver will attempt to leave free
# in the file system containing $DESTINATION_DIR.  
#
# This variable may be set as an ordinary integer, or as a real number
# followed by a suffix K, M, G, or T, which represents the numerical
# value multiplied by 1,024 (kilo), 1,048,576 (mega), 1,073,741,824
# (giga), and 1,099,511,627,776 (tera), respectively.
FREESPACE_MINIMUM=0

# The maximum percentage of space of the file system containing
# $DESTINATION_DIR that rwreceiver will be willing to use.
SPACE_MAXIMUM_PERCENT=100

# Only one of SENDER_SERVERS or SENDER_CLIENTS needs to be specified.
#
# These variables specify the sender(s) from which the receiver will
# receive its files..  These variables are multi-line values, where
# each line has the value for one rwsender.  The variable to specify
# and its syntax depends on whether rwreceiver is running in client or
# server mode (see the MODE variable above).
#
# If the receiver is in client mode, then SENDER_SERVERS must be
# specified.  The lines should have the following format:
#     <identifier> <host>:<port>
#
# If the receiver is in server mode, then SENDER_CLIENTS must be
# specified.  The lines should have the following format:
#     <identifier>
#
# The <identifier> is the string identifier that was specified when
# the rwsender process was started (that is, its --ident value).
#
# When rwreceiver is in client mode, set SENDER_SERVERS to tell
# rwreceiver how to connect to each rwsender server.  The <host> is
# the name or IP address of the machine where rwsender is listening,
# and <port> is its port.  When <host> is an IPv6 address, enclose it
# in square brackets.
#
# The items on each line must be separated by one or more space and/or
# tab characters.  Leading and trailing whitespace on each line is
# ignored.
#
# In the following templates, the line(s) for your senders must be
# inserted between the line beginning:
#     SENDER_SERVERS=`cat <<'END_SENDERS'
# (or similarly for SENDER_CLIENTS) and the line beginning:
#     END_SENDERS
# Do not modify these lines or the backquote on the following line.
#
# When using "MODE=client" above, specify the rwsender servers to
# connect to:
SENDER_SERVERS=`cat <<'END_SENDERS' # Do not modify this line
    sender-1  machine.test.org:9999
    sender-2  192.168.100.10:9998
    sender-3  [2001:db8:c0:a8::64:a]:9997
END_SENDERS
` #Do not modify this line or the previous line

# When using "MODE=server" above, specify the rwsender clients that
# will be connecting to this receiver:
SENDER_CLIENTS=`cat <<'END_SENDERS' # Do not modify this line
    sender-1
    sender-2
    sender-3
END_SENDERS
` #Do not modify this line or the previous line

# Duplication destination directories
#
# The receiver can copy incoming files to multiple destination
# directories.  Note that if copying to one of the following
# directories fails, an error is logged but the file is treated as
# having been successfully transferred.
#
# This variable contains a multi-line value, where each line lists a
# duplicate destination directory.  The format for the line is:
#     <duplicate-dir>
#
# Note that each line must be a complete directory path, and it may
# not contain any variable names---for example, do NOT use
# $statedirectory here.
#
# Leading and trailing whitespace on each line is ignored.
#
# No duplicate destination directories are necessary.
#
# In this template, the line should be inserted between the line
# beginning:
#     DUPLICATE_DIRS=`cat <<'END_DUPLICATE_DIRS'
# and the line beginning:
#     END_DUPLICATE_DIRS
# Do not modify these lines or the backquote on the following line.
#
DUPLICATE_DIRS=`cat <<'END_DUPLICATE_DIRS' # Do not modify this line
    /var/rwreceiver/duplicate-dest2
    /var/rwreceiver/duplicate-dest3
END_DUPLICATE_DIRS
` #Do not modify this line or the previous line

# When copying files to a duplicate destination directory, by default
# rwreceiver creates the files as hard links (if possible) to each
# other and to files in the destination directory.  However, if some
# process modifies-in-place a copy in one location that will affect
# all files.  To force rwreceiver to create a complete copy, change
# DUPLICATE_COPIES from "link" to "copy".
#
DUPLICATE_COPIES=link


###

# When using the optional GnuTLS support (which must be compiled into
# rwreceiver), the full path the CA file (TLS_CA) must be specified,
# as well as either the full path to the program-specific PKCS#12 file
# (TLS_PKCS12) or the full paths to the program-specific certificate
# (TLS_CERT) and key (TLS_KEY) files.
#
# If the PKCS#12 file is password protected, you must set the
# RWRECEIVER_TLS_PASSWORD environment variable to the password prior
# to starting rwreceiver.  If RWRECEIVER_TLS_PASSWORD is not set, it
# is treated as a null password; set it to the empty string to allow
# for an empty password.

# The full path to the root CA file, PEM encoded
TLS_CA=

# The full path to the program specific PKCS#12 file, DER encoded
TLS_PKCS12=

# The full path to the program specific key file, PEM encoded
TLS_KEY=

# The full path to the program specific certificate file, PEM encoded
TLS_CERT=

# The full path to the Certificate Revocation List, PEM encoded.
# Optional.
TLS_CRL=

# The preference order (priority) for ciphers, key exchange methods,
# message authentication codes, and compression methods.  Optional.
# The default is "NORMAL".  Available arguments depend on your version
# of GnuTLS.
TLS_PRIORITY=

# The security level to use when generating Diffie-Hellman parameters.
# One of low, medium, high, or ultra.  Optional.  The default is
# "medium".
TLS_SECURITY=

# The debugging level used internally by the GnuTLS library, a number
# between 0 (no debugging) and 99 inclusive.  Optional.
TLS_DEBUG_LEVEL=

###

# The type of logging to use.  Valid values are "legacy" and "syslog".
LOG_TYPE=syslog

# The lowest level of logging to actually log.  Valid values are:
# emerg, alert, crit, err, warning, notice, info, debug
LOG_LEVEL=info

# The full path of the directory where the log files will be written
# when LOG_TYPE is "legacy".
LOG_DIR=${statedirectory}/log

# The full path of the directory where the PID file will be written
PID_DIR=${LOG_DIR}

# The user this program runs as; root permission is required only when
# rwreceiver listens on a privileged port.
USER=root
#USER=`whoami`  # run as user invoking the script

# Extra options to pass to rwreceiver
EXTRA_OPTIONS=
